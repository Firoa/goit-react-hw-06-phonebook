{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactList/slide.module.css","components/Button/Button.module.css","components/AlertBlock/AlertBlock.module.css","components/ContactForm/slideTitle.module.css","components/ContactForm/animationSlide.module.css","components/App/App.module.css","components/Button/Button.js","components/AlertBlock/AlertBlock.js","components/ContactForm/ContactForm.js","redux/actions.js","containers/ContactFormContainer.js","components/ContactList/ContactList.js","containers/ContactListContainer.js","components/Filter/Filter.js","containers/FilterContainer.js","components/App/App.js","containers/AppContainer.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","Button","callbackfunc","text","type","onClick","className","styles","button","AlertBlock","name","wrapper","message","ContactForm","props","handleChange","e","target","value","setState","handleAddContact","contacts","state","find","contact","allert","flag","setTimeout","prevState","resetState","number","id","startFlag","formId","uuidv4","this","readFromLS","persistedContacts","localStorage","getItem","JSON","parse","prevProps","writeToLS","OnAddContact","onSubmit","htmlFor","contact_form","CSSTransition","in","timeout","classNames","slideTitle","title","label","slideAllert","unmountOnExit","placeholder","onChange","FormInput","test","Component","addContact","createAction","deleteContact","onChangeFilter","connect","dispatch","data","actions","ContactList","filterKey","OnDeleteContact","renderList","filter","toLowerCase","includes","contact_field","TransitionGroup","component","contact_list","map","key","slide","contactListItem","ItemInfo","Filter","propTypes","PropTypes","array","App","app","length","AppComponent","createReducer","action","payload","filtredContacts","setItem","stringify","store","configureStore","reducer","Reducers","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e499f80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__1bqSD\",\"title\":\"ContactForm_title__ODl9c\",\"label\":\"ContactForm_label__2Vr7X\",\"FormInput\":\"ContactForm_FormInput__1-7Wv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_field\":\"ContactList_contact_field__35gwt\",\"contact_list\":\"ContactList_contact_list__1wY-_\",\"button\":\"ContactList_button__121H4\",\"contactListItem\":\"ContactList_contactListItem__1bjlo\",\"ItemInfo\":\"ContactList_ItemInfo__bd3QX\",\"ItemNumber\":\"ContactList_ItemNumber__2VqX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1osi9\",\"title\":\"Filter_title__IySCD\",\"label\":\"Filter_label__2F2Tp\",\"FormInput\":\"Filter_FormInput__s2Uzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1oPee\",\"enterActive\":\"slide_enterActive__aIpPV\",\"exit\":\"slide_exit__3hHlU\",\"exitActive\":\"slide_exitActive__1hlDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__wUioA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AlertBlock_wrapper__3amcu\",\"message\":\"AlertBlock_message__3b8Oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTitle_enter__2T63n\",\"enterActive\":\"slideTitle_enterActive__3z4SJ\",\"exit\":\"slideTitle_exit__p1jTt\",\"exitActive\":\"slideTitle_exitActive__2WdVz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"animationSlide_enter__8w7nX\",\"enterActive\":\"animationSlide_enterActive__1ZQww\",\"exit\":\"animationSlide_exit__352C3\",\"exitActive\":\"animationSlide_exitActive__32UMZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2AW5S\"};","import React from 'react';\r\nimport styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ callbackfunc, text, type}) => {  \r\n  if (typeof callbackfunc === 'function') {\r\n    return (\r\n      <button\r\n        onClick={callbackfunc}       \r\n        className={styles.button}\r\n        type={type}\r\n      >\r\n        {text}\r\n      </button>\r\n    );\r\n  } else {\r\n    return (\r\n      <button className={styles.button} type={type}>\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  callbackfunc: PropTypes.func,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from './AlertBlock.module.css';\r\nconst AlertBlock = ({ name }) => (\r\n  <div className={styles.wrapper}>\r\n    <p className={styles.message}>{`${name} is allready in contacts`}</p>\r\n  </div>\r\n);\r\n\r\nexport default AlertBlock;\r\n","import React, { Component } from 'react';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Button from '../Button/Button';\r\nimport styles from './ContactForm.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport AllertBlock from '../AlertBlock/AlertBlock';\r\nimport slideTitle from './slideTitle.module.css';\r\nimport slideAllert from './animationSlide.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      number: '',\r\n      id: '',\r\n      startFlag: false,\r\n      allert: { flag: false },\r\n    };\r\n    this.formId = uuidv4();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ startFlag: true });\r\n    const { readFromLS } = this.props;\r\n    const persistedContacts = localStorage.getItem('contacts');\r\n    if (!!persistedContacts) {\r\n      readFromLS(JSON.parse(persistedContacts));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts, writeToLS } = this.props;\r\n    if (prevProps !== this.props) {\r\n      writeToLS(contacts);\r\n    }\r\n  }\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleAddContact = () => {\r\n    const { contacts } = this.props;\r\n    const { name } = this.state;\r\n    if (contacts.find(contact => contact.name === name))\r\n      this.setState({ allert: { flag: true, name: name } });\r\n    setTimeout(() => {\r\n      this.setState(prevState => {\r\n        return {\r\n          allert: { ...prevState.allert, flag: false },\r\n        };\r\n      });\r\n    }, 1000);\r\n    this.resetState();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, startFlag, allert } = this.state;\r\n    const { OnAddContact } = this.props;\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={this.handleAddContact}\r\n          htmlFor={this.formId}\r\n          className={styles.contact_form}\r\n        >\r\n          <CSSTransition in={startFlag} timeout={500} classNames={slideTitle}>\r\n            <h2 className={styles.title}>PhoneBook</h2>\r\n          </CSSTransition>\r\n          <label className={styles.label}>\r\n            <h3 className={styles.title}>Name</h3>\r\n            <CSSTransition\r\n              in={allert.flag}\r\n              timeout={250}\r\n              classNames={slideAllert}\r\n              unmountOnExit\r\n            >\r\n              <AllertBlock name={allert.name} />\r\n            </CSSTransition>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter friend\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id={this.formId}\r\n              name=\"name\"\r\n              className={styles.FormInput}\r\n            ></input>\r\n          </label>\r\n          <label className={styles.label}>\r\n            <h3 className={styles.title}>Number</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              id={this.formId}\r\n              name=\"number\"\r\n              className={styles.FormInput}\r\n            ></input>\r\n          </label>\r\n          <Button\r\n            type=\"button\"\r\n            text=\"Add contact\"\r\n            callbackfunc={() => {\r\n              OnAddContact({ ...this.state, ...{ id: uuidv4() } });\r\n              this.handleAddContact();\r\n            }}\r\n            test={this.resetState}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction('contacts/addContacts');\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\nexport const onChangeFilter = createAction('contacts/onChangeFilter');\r\nexport const writeToLS = createAction('contacts/writeToLS');  \r\nexport const readFromLS = createAction('contacts/readFromLS');  \r\n\r\n\r\n","import ContactForm from '../components/ContactForm/ContactForm'\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\n\r\n\r\nconst mapStateToProps = state => ({   \r\n    contacts: state.contacts,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    OnAddContact: data => dispatch(actions.addContact(data)),\r\n    writeToLS: data => dispatch(actions.writeToLS(data)),\r\n    readFromLS: data => dispatch(actions.readFromLS(data))\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport styles from './ContactList.module.css';\r\nimport slide from './slide.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ filterKey, OnDeleteContact, contacts }) => {\r\n  let renderList = [...contacts];\r\n  if (filterKey !== '') {\r\n    renderList = contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filterKey.toLowerCase()),\r\n    );\r\n  }\r\n  return (\r\n    <div className={styles.contact_field}>\r\n      <TransitionGroup component=\"ul\" className={styles.contact_list}>\r\n        {renderList.map(({ id, name, number }) => (\r\n          <CSSTransition\r\n            key={id}\r\n            classNames={slide}\r\n            timeout={250}\r\n            unmountOnExit\r\n          >\r\n            <li key={id} className={styles.contactListItem}>\r\n              <p className={styles.ItemInfo}>{name}</p>\r\n              <p className={styles.ItemInfo}>{number}</p>\r\n              <button\r\n                className={styles.button}\r\n                onClick={() => OnDeleteContact(id)}\r\n                type=\"button\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filterKey: PropTypes.string.isRequired,\r\n  OnDeleteContact: PropTypes.func,  \r\n  contacts: PropTypes.array\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport ContactList from '../components/ContactList/ContactList'\r\n\r\nconst mapStateToProps = state => ({\r\n    // send a props to component\r\n    contacts: state.contacts,\r\n    filterKey: state.filter,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    OnDeleteContact: data => dispatch(actions.deleteContact(data)),\r\n  });\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ onChangeFilter, filter }) => (\r\n  <div>\r\n    <form className={styles.filter}>\r\n      <label className={styles.label}>\r\n        <h2 className={styles.title}>Find contacts by name</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter contact\"\r\n          value={filter}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n          name=\"filter\"\r\n          className={styles.FormInput}\r\n        ></input>\r\n      </label>\r\n    </form>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func,  \r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport Filter from '../components/Filter/Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: data => dispatch(actions.onChangeFilter(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport ContactForm from '../../containers/ContactFormContainer';\nimport ContactList from '../../containers/ContactListContainer';\nimport styles from './App.module.css';\nimport Filter from '../../containers/FilterContainer';\nimport { CSSTransition } from 'react-transition-group';\nimport slide from '../ContactList/slide.module.css';\nimport PropTypes from 'prop-types';\n\nconst App = ({ contacts }) => (\n  <div className={styles.app}>\n    <ContactForm />\n    <CSSTransition\n      in={!!(contacts.length > 1)}\n      timeout={250}\n      classNames={slide}\n      unmountOnExit\n    >\n      <Filter />\n    </CSSTransition>\n    {contacts.length > 0 && <ContactList />}\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nexport default App;\n","import AppComponent from '../components/App/App';\r\nimport { connect } from 'react-redux';\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\nexport default connect(mapStateToProps, null)(AppComponent);\r\n","import * as actions from './actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nexport const contacts = createReducer([], {\r\n  [actions.addContact.type]: (state, action) => {\r\n    if (!state.find(contact => contact.name === action.payload.name)) {\r\n      return [...state, action.payload];\r\n    }\r\n    return state;\r\n  },\r\n  [actions.deleteContact.type]: (state, action) => {\r\n    const filtredContacts = state.filter(\r\n      contact => contact.id !== action.payload,\r\n    );\r\n    return [...filtredContacts];\r\n  },\r\n  [actions.writeToLS.type]: (state, action) => {\r\n    localStorage.setItem('contacts', JSON.stringify(state));\r\n    return state;\r\n  },\r\n  [actions.readFromLS]: (state, action) => {\r\n    return [...action.payload];\r\n  },\r\n});\r\n\r\nexport const filter = createReducer('', {\r\n  [actions.onChangeFilter.type]: (state, action) => action.payload,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport * as Reducers from './reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: Reducers.contacts,\r\n    filter: Reducers.filter,\r\n  },\r\n});\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/AppContainer';\nimport './index.css'\nimport  store  from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nconsole.log(store);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}